(clojure.core/defn translate-rect-for-another-frame [& args__200954__auto__] (clojure.core/apply goog.style/translateRectForAnotherFrame args__200954__auto__))
(clojure.core/defn get-vendor-style-name- [& args__200954__auto__] (clojure.core/apply goog.style/getVendorStyleName_ args__200954__auto__))
(clojure.core/defn get-ie-pixel-value- [& args__200954__auto__] (clojure.core/apply goog.style/getIePixelValue_ args__200954__auto__))
(clojure.core/defn length-unit-regex- [& args__200954__auto__] (clojure.core/apply goog.style/lengthUnitRegex_ args__200954__auto__))
(clojure.core/defn set-size [& args__200954__auto__] (clojure.core/apply goog.style/setSize args__200954__auto__))
(clojure.core/defn uninstall-styles [& args__200954__auto__] (clojure.core/apply goog.style/uninstallStyles args__200954__auto__))
(clojure.core/defn get-css-translation [& args__200954__auto__] (clojure.core/apply goog.style/getCssTranslation args__200954__auto__))
(clojure.core/defn set-page-offset [& args__200954__auto__] (clojure.core/apply goog.style/setPageOffset args__200954__auto__))
(clojure.core/defn set-width [& args__200954__auto__] (clojure.core/apply goog.style/setWidth args__200954__auto__))
(def MATRIX-TRANSLATION-REGEX- nil goog.style/MATRIX_TRANSLATION_REGEX_)
(clojure.core/defn get-style- [& args__200954__auto__] (clojure.core/apply goog.style/getStyle_ args__200954__auto__))
(clojure.core/defn set-styles [& args__200954__auto__] (clojure.core/apply goog.style/setStyles args__200954__auto__))
(def ABSOLUTE-CSS-LENGTH-UNITS- nil goog.style/ABSOLUTE_CSS_LENGTH_UNITS_)
(def CONVERTIBLE-RELATIVE-CSS-UNITS- nil goog.style/CONVERTIBLE_RELATIVE_CSS_UNITS_)
(clojure.core/defn get-float [& args__200954__auto__] (clojure.core/apply goog.style/getFloat args__200954__auto__))
(clojure.core/defn get-container-offset-to-scroll-into [& args__200954__auto__] (clojure.core/apply goog.style/getContainerOffsetToScrollInto args__200954__auto__))
(clojure.core/defn get-font-size [& args__200954__auto__] (clojure.core/apply goog.style/getFontSize args__200954__auto__))
(clojure.core/defn to-style-attribute [& args__200954__auto__] (clojure.core/apply goog.style/toStyleAttribute args__200954__auto__))
(clojure.core/defn get-margin-box [& args__200954__auto__] (clojure.core/apply goog.style/getMarginBox args__200954__auto__))
(clojure.core/defn clear-transparent-background-image [& args__200954__auto__] (clojure.core/apply goog.style/clearTransparentBackgroundImage args__200954__auto__))
(clojure.core/defn set-height [& args__200954__auto__] (clojure.core/apply goog.style/setHeight args__200954__auto__))
(clojure.core/defn get-font-family [& args__200954__auto__] (clojure.core/apply goog.style/getFontFamily args__200954__auto__))
(clojure.core/defn set-opacity [& args__200954__auto__] (clojure.core/apply goog.style/setOpacity args__200954__auto__))
(clojure.core/defn get-content-box-size [& args__200954__auto__] (clojure.core/apply goog.style/getContentBoxSize args__200954__auto__))
(clojure.core/defn get-border-box [& args__200954__auto__] (clojure.core/apply goog.style/getBorderBox args__200954__auto__))
(clojure.core/defn get-box- [& args__200954__auto__] (clojure.core/apply goog.style/getBox_ args__200954__auto__))
(clojure.core/defn get-vendor-js-style-name- [& args__200954__auto__] (clojure.core/apply goog.style/getVendorJsStyleName_ args__200954__auto__))
(clojure.core/defn to-selector-case [& args__200954__auto__] (clojure.core/apply goog.style/toSelectorCase args__200954__auto__))
(clojure.core/defn get-border-box-size [& args__200954__auto__] (clojure.core/apply goog.style/getBorderBoxSize args__200954__auto__))
(clojure.core/defn get-client-position [& args__200954__auto__] (clojure.core/apply goog.style/getClientPosition args__200954__auto__))
(clojure.core/defn to-camel-case [& args__200954__auto__] (clojure.core/apply goog.style/toCamelCase args__200954__auto__))
(clojure.core/defn get-bounds [& args__200954__auto__] (clojure.core/apply goog.style/getBounds args__200954__auto__))
(clojure.core/defn set-pre-wrap [& args__200954__auto__] (clojure.core/apply goog.style/setPreWrap args__200954__auto__))
(clojure.core/defn get-relative-position [& args__200954__auto__] (clojure.core/apply goog.style/getRelativePosition args__200954__auto__))
(clojure.core/defn get-cascaded-style [& args__200954__auto__] (clojure.core/apply goog.style/getCascadedStyle args__200954__auto__))
(clojure.core/defn set-position [& args__200954__auto__] (clojure.core/apply goog.style/setPosition args__200954__auto__))
(clojure.core/defn get-computed-position [& args__200954__auto__] (clojure.core/apply goog.style/getComputedPosition args__200954__auto__))
(clojure.core/defn get-client-left-top [& args__200954__auto__] (clojure.core/apply goog.style/getClientLeftTop args__200954__auto__))
(clojure.core/defn get-computed-style [& args__200954__auto__] (clojure.core/apply goog.style/getComputedStyle args__200954__auto__))
(clojure.core/defn set-style [& args__200954__auto__] (clojure.core/apply goog.style/setStyle args__200954__auto__))
(clojure.core/defn get-pixel-style-value- [& args__200954__auto__] (clojure.core/apply goog.style/getPixelStyleValue_ args__200954__auto__))
(clojure.core/defn get-framed-page-offset [& args__200954__auto__] (clojure.core/apply goog.style/getFramedPageOffset args__200954__auto__))
(clojure.core/defn set-style- [& args__200954__auto__] (clojure.core/apply goog.style/setStyle_ args__200954__auto__))
(clojure.core/defn get-padding-box [& args__200954__auto__] (clojure.core/apply goog.style/getPaddingBox args__200954__auto__))
(clojure.core/defn set-unselectable [& args__200954__auto__] (clojure.core/apply goog.style/setUnselectable args__200954__auto__))
(clojure.core/defn set-inline-block [& args__200954__auto__] (clojure.core/apply goog.style/setInlineBlock args__200954__auto__))
(clojure.core/defn get-offset-parent [& args__200954__auto__] (clojure.core/apply goog.style/getOffsetParent args__200954__auto__))
(clojure.core/defn get-visible-rect-for-element [& args__200954__auto__] (clojure.core/apply goog.style/getVisibleRectForElement args__200954__auto__))
(clojure.core/defn get-length-units [& args__200954__auto__] (clojure.core/apply goog.style/getLengthUnits args__200954__auto__))
(clojure.core/defn get-computed-overflow-x [& args__200954__auto__] (clojure.core/apply goog.style/getComputedOverflowX args__200954__auto__))
(clojure.core/defn is-right-to-left [& args__200954__auto__] (clojure.core/apply goog.style/isRightToLeft args__200954__auto__))
(clojure.core/defn get-computed-overflow-y [& args__200954__auto__] (clojure.core/apply goog.style/getComputedOverflowY args__200954__auto__))
(clojure.core/defn get-computed-text-align [& args__200954__auto__] (clojure.core/apply goog.style/getComputedTextAlign args__200954__auto__))
(clojure.core/defn get-client-viewport-element [& args__200954__auto__] (clojure.core/apply goog.style/getClientViewportElement args__200954__auto__))
(clojure.core/defn set-content-box-size [& args__200954__auto__] (clojure.core/apply goog.style/setContentBoxSize args__200954__auto__))
(clojure.core/defn get-opacity [& args__200954__auto__] (clojure.core/apply goog.style/getOpacity args__200954__auto__))
(clojure.core/defn get-scrollbar-width [& args__200954__auto__] (clojure.core/apply goog.style/getScrollbarWidth args__200954__auto__))
(clojure.core/defn get-bounding-client-rect- [& args__200954__auto__] (clojure.core/apply goog.style/getBoundingClientRect_ args__200954__auto__))
(clojure.core/defn get-ie-pixel-distance- [& args__200954__auto__] (clojure.core/apply goog.style/getIePixelDistance_ args__200954__auto__))
(clojure.core/defn get-size [& args__200954__auto__] (clojure.core/apply goog.style/getSize args__200954__auto__))
(clojure.core/defn set-box-sizing-size- [& args__200954__auto__] (clojure.core/apply goog.style/setBoxSizingSize_ args__200954__auto__))
(clojure.core/defn ie-border-width-keywords- [& args__200954__auto__] (clojure.core/apply goog.style/ieBorderWidthKeywords_ args__200954__auto__))
(clojure.core/defn get-page-offset [& args__200954__auto__] (clojure.core/apply goog.style/getPageOffset args__200954__auto__))
(clojure.core/defn scroll-into-container-view [& args__200954__auto__] (clojure.core/apply goog.style/scrollIntoContainerView args__200954__auto__))
(clojure.core/defn get-computed-cursor [& args__200954__auto__] (clojure.core/apply goog.style/getComputedCursor args__200954__auto__))
(clojure.core/defn is-unselectable [& args__200954__auto__] (clojure.core/apply goog.style/isUnselectable args__200954__auto__))
(clojure.core/defn get-size-with-display- [& args__200954__auto__] (clojure.core/apply goog.style/getSizeWithDisplay_ args__200954__auto__))
(clojure.core/defn set-float [& args__200954__auto__] (clojure.core/apply goog.style/setFloat args__200954__auto__))
(clojure.core/defn get-computed-z-index [& args__200954__auto__] (clojure.core/apply goog.style/getComputedZIndex args__200954__auto__))
(clojure.core/defn get-style [& args__200954__auto__] (clojure.core/apply goog.style/getStyle args__200954__auto__))
(clojure.core/defn unselectable-style- [& args__200954__auto__] (clojure.core/apply goog.style/unselectableStyle_ args__200954__auto__))
(clojure.core/defn get-page-offset-top [& args__200954__auto__] (clojure.core/apply goog.style/getPageOffsetTop args__200954__auto__))
(clojure.core/defn install-styles [& args__200954__auto__] (clojure.core/apply goog.style/installStyles args__200954__auto__))
(clojure.core/defn set-transparent-background-image [& args__200954__auto__] (clojure.core/apply goog.style/setTransparentBackgroundImage args__200954__auto__))
(clojure.core/defn set-border-box-size [& args__200954__auto__] (clojure.core/apply goog.style/setBorderBoxSize args__200954__auto__))
(clojure.core/defn parse-style-attribute [& args__200954__auto__] (clojure.core/apply goog.style/parseStyleAttribute args__200954__auto__))
(clojure.core/defn get-viewport-page-offset [& args__200954__auto__] (clojure.core/apply goog.style/getViewportPageOffset args__200954__auto__))
(clojure.core/defn get-page-offset-left [& args__200954__auto__] (clojure.core/apply goog.style/getPageOffsetLeft args__200954__auto__))
(clojure.core/defn get-ie-pixel-border- [& args__200954__auto__] (clojure.core/apply goog.style/getIePixelBorder_ args__200954__auto__))
(clojure.core/defn get-background-color [& args__200954__auto__] (clojure.core/apply goog.style/getBackgroundColor args__200954__auto__))
(clojure.core/defn show-element [& args__200954__auto__] (clojure.core/apply goog.style/showElement args__200954__auto__))
(clojure.core/defn is-element-shown [& args__200954__auto__] (clojure.core/apply goog.style/isElementShown args__200954__auto__))
(clojure.core/defn get-position [& args__200954__auto__] (clojure.core/apply goog.style/getPosition args__200954__auto__))